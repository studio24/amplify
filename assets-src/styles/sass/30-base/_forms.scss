/*------------------------------------*\
    #Forms
\*------------------------------------*/

/**
Start of resets for the fieldset element
https://thatemil.com/blog/2015/01/03/reset-your-fieldset/
 */
fieldset {
	// If you want a border etc., apply this to a wrapping container for the fieldset
	border: 0;
	margin: 0;
	min-width: 0;
	padding: 0.01em 0 0 0;
}


body:not(:-moz-handler-blocked) fieldset {
	display: table-cell; // Deal with fieldset width in Firefox
}
/**
End of resets for the fieldset element
 */


form > * + *,
.field-group > * + * {
	margin-top: 1.75rem;
}


.field-group + .field-group {
	margin-top: 2.5rem;
}


.field-group__heading {
	@include text-20;
	font-weight: bold;
}


/**
Group inputs to line up side-by-side
 */
.input-group {
	display: flex;
	align-items: center;
}


.input-group > * + * {
	margin-left: rem(30);
}


[dir="rtl"] {
	.input-group > * + * {
		margin-left: 0;
		margin-right: rem(30);
	}
}


.field {
	max-width: rem($text-measure);
}


label,
.field-label,
.field-hint,
.field-error-msg,
.faux-label {
	display: block;
}


.field-label,
.faux-label {
	margin-bottom: 0.25rem;
}


.field-label,
.group-legend {
	font-weight: bold;

	+ .field-hint {
		margin-top: 0.25rem;
	}

}


.field-hint {
	@include text-14;
	color: $storm-gray;
	margin-bottom: 0.25rem;
	max-width: rem($text-measure);
}


.required {
	color: $storm-gray;
	font-weight: normal;
}


textarea,
[type=date],
[type=email],
[type=file],
[type=number],
[type=password],
[type=search],
[type=tel],
[type=text],
[type=time],
[type=url] {
	appearance: none;
	background-color: $off-white;
	border: 2px solid $input-border-color;
	border-radius: 0;
	line-height: 1.25;
	padding: rem(5);
	width: 100%;

	&:focus {
		box-shadow: inset 0 0 0 2px;
		outline: solid 3px $focus-color;
		outline-offset: 0;
	}
}


select,
[type=date],
[type=email],
[type=number],
[type=password],
[type=search],
[type=tel],
[type=text],
[type=time],
[type=url] {
	height: rem(44); // To match button height
}


[type="file"] {
	border-color: transparent;

	&:focus {
		border-color: currentColor;
		box-shadow: inset 0 0 0 4px;
		margin-left: rem(-5);
		margin-right: rem(-5);
		outline: 3px solid $focus-color;
		padding-left: rem(5);
		padding-right: rem(5);
	}
}


/**
Search
 */
[type="search"]::-webkit-search-decoration,
[type="search"]::-webkit-search-cancel-button {
	appearance: none;
}


/**
Select
 */
select {
	background-color: $off-white;
	border: 2px solid;
	border-radius: 0;
	line-height: 1.25;
	padding: rem(5);
	width: 100%;

	&:focus {
		box-shadow: inset 0 0 0 2px;
		outline: solid 3px $focus-color;
		outline-offset: 0;
	}
}


/**
Optional select with custom arrow icon matching the SVG used for accessible autocomplete
 */
@supports (appearance: none) {
	select {
		appearance: none;
		background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"%3E%3Cpath fill="none" d="M0 0h24v24H0z"/%3E%3Cpath d="M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"/%3E%3C/svg%3E');
		background-position: center right rem(5);
		background-repeat: no-repeat;
		padding-right: rem(34);
	}

	[dir="rtl"] select {
		background-position: center left rem(5);
		padding-left: rem(34);
		padding-right: rem(5);
	}
}


/**
Textarea
 */
textarea {
	height: 10em;
	resize: vertical;
}


/**
Memorable dates (e.g. date of birth)
 */
.memorable-date {
	display: inline-block;
	margin-top: 0;
}

.memorable-date + .memorable-date {
	margin-left: 1rem;
}

[dir="rtl"] {
	.memorable-date + .memorable-date {
		margin-left: auto;
		margin-right: 1rem;
	}
}


/**
Segmented options. Can use either radio or checkbox inputs. The purpose is to
show all available options outright, rather than hide them behind a <select>
 */
.segmented-group-wrapper {
	max-width: none;
}

.segmented-group.l-switcher {
	margin-top: 0;

	> * > * {
		max-width: 100%;
		min-width: 33.333%; // Modify the percentage according to the number of choices and what looks best
		position: relative; // Required for the absolutely positioned input indicator
	}

	label {
		border: 2px solid;
		cursor: pointer;
		display: block;
		margin: rem(2);

		&:before,
		&:after {
			content: '';
			position: absolute;
		}

		&::before {
			background: transparent;
			height: rem(24);
			right: rem(10);
			top: rem(10);
			width: rem(24);
		}

		&::after {
			background: transparent;
			border: solid;
			border-top-color: transparent;
			border-width: 0 0 3px 3px;
			height: rem(6.5);
			right: rem(16);
			opacity: 0;
			top: rem(17);
			transform: rotate(-45deg);
			width: rem(12);
		}
	}

	input {
		cursor: pointer;
		height: rem(44);
		margin: 0;
		opacity: 0;
		position: absolute;
		right: 0;
		top: 0;
		width: rem(44);
		z-index: 1;
	}

	.segmented-label {
		@include stack(.5em);
		display: block;
		padding: rem(10);
		padding-right: rem(44);

		span {
			display: block;
		}

		span:first-of-type {
			font-weight: bold;
		}
	}

	// Input with hover
	> * > *:hover label {
		background-color: $twiki-gray;
	}

	// Input with focus
	input:focus + label {
		border-color: $focus-color;
		box-shadow: inset 0 0 0 4px;
		outline: solid 2px $focus-color;
	}

	// Input checked
	input:checked + label {
		&::after {
			opacity: 1;
		}
	}
}

[dir="rtl"] {
	.segmented-group {
		label::before {
			left: rem(10);
			right: auto;
		}

		label::after {
			left: rem(16);
			right: auto;
		}

		input {
			left: 0;
			right: auto;
		}

		.segmented-label {
			padding: rem(10);
			padding-left: rem(44);
		}
	}
}


/**
Fixed input widths
 */
.input-width-30 {
	max-width: 59ex;
}


.input-width-20 {
	max-width: 41ex;
}


.input-width-10 {
	max-width: 23ex;
}


.input-width-5 {
	max-width: 10.8ex;
}


.input-width-4 {
	max-width: 9ex;
}


.input-width-3 {
	max-width: 7.2ex;
}


.input-width-2 {
	max-width: 5.4ex;
}


/**
Error styles
 */
[data-component="error-summary"] li a {
	color: $error-color;
	display: inline-block;
	font-weight: bold;
	padding-bottom: rem(10);
	padding-top: rem(10);

	&:hover,
	&:visited {
		color: $error-color;
	}

	&:focus {
		color: $off-black;
	}

}


.field--error {
	border-left: solid rem(5) $error-color;
	padding-left: rem(15);

	input:not([type="file"]),
	textarea:not(:focus) {
		border-color: $error-color;
	}

	input:focus,
	textarea:focus {
		border-color: inherit;
	}
}


[dir="rtl"] {
	.field--error {
		border-left: none;
		border-right: solid rem(5) $error-color;
		padding-left: 0;
		padding-right: rem(15);
	}
}


.field-error-msg {
	color: $error-color;
	font-weight: bold;
	margin-top: rem(15);
}